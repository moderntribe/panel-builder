@import '../../shared/spacing.pcss';
@import '../../shared/colors.pcss';
@import '../../shared/transitions.pcss';

.field {
	composes: fieldContainer from "../../shared/fields.pcss";
	padding: 6px 0 6px 0;
	display: flex;
	flex-direction: row;
	align-items: center;
	max-width: 575px;

	&.isCondition {
		padding: 6px 0 6px 0;
	}

	> div {
		height: 100%;
		flex: 1;
	}

	p {
		display: none; /* Might still use these, but for now, hide. */
	}
}

.field {

	[class="sketch-picker"] {
		margin-left: -65px;
		margin-top: 10px;
		position: absolute;
		width: 180px !important;
		background: var(--white);
		z-index: 10;
		border-radius: 2px;

		&:after {
			bottom: 100%;
			left: 50%;
			content: " ";
			height: 0;
			width: 0;
			position: absolute;
			pointer-events: none;
			border-color: rgba(35, 40, 45, 0);
			border-bottom-color: var(--white);
			border-width: 8px;
			margin-left: -8px;
		}
	}
}

[data-live-edit="false"] {

	[class="sketch-picker"] {
		margin-left: 0;

		&:after {
			left: 0;
		}
	}
}

.colorLabel {
	composes: label from "../../shared/inputs.pcss";
	color: var(--white);
	height: auto;
	overflow: visible;
	max-width: 100%;
	position: relative;
	right: -1px;

	[class="block-picker"] {
		margin-top: 12px;
		position: absolute !important;
		z-index: 12;
		width: 100% !important;

		> div + div {
			height: 50px !important;
		}

		input {
			display: none;
			border-radius: 0 !important;
			line-height: 30px;
			height: 30px !important;
		}
	}

	&.hasInput {

		[class="sketch-picker"] {

			input {
				display: block;
				width: 100% !important;
			}
		}

		[class="block-picker"] {

			input {
				display: block;
				width: 100%;
			}
		}
	}

	[class="block-picker"] div:first-child + div + div > div > div:not(:last-of-type) {
		border: 1px solid var(--border-color-dark);
	}

	&.isLight {

		[class="block-picker"] div:first-child + div > div {
			color: var(--picker-label) !important;
		}
	}
}

.label {
	composes: inputLabel from "../../shared/fields.pcss";
	align-self: flex-start;
	margin-right: 10px;
	overflow: visible;
	width: calc(50% - 10px);
}

.description {
	composes: inputDescription from "../../shared/fields.pcss";
	margin-top: 13px;
}

.selectedColor {
	border: 1px solid #D1CECE;
	border-top-right-radius: 2px;
	border-bottom-right-radius: 2px;
	position: relative;
	border-right: 0;
	height: 35px;
}

.colorTrigger {
	border-top-right-radius: 2px;
	border-bottom-right-radius: 2px;
	height: 35px;
}

.colorClear {
	background: none !important;
	position: absolute;
	width: 35px;
	height: 35px;
	right: 20px;
	top: -4px;

	i {
		position: absolute;
		width: 40px;
		height: 40px;
		top: 0;
		left: 0;
		margin: 0;

		&:before  {
			position: absolute;
			font-size: 16px;
			width: 35px;
			height: 35px;
			top: 0;
			left: 0;
			text-align: center;
			line-height: 42px;
			color: var(--white);
			z-index: 4;
		}

		&:after  {
			position: absolute;
			content: '';
			width: 16px;
			height: 16px;
			top: 13px;
			left: 12px;
			border-radius: 100%;
			transition: var(--transition-button-primary);
			z-index: 3;
		}
	}
}

.selectedColorArrow {
	background-color: var(--color-white);
	border: 1px solid var(--select-arrow);
	border-top-right-radius: 2px;
	border-bottom-right-radius: 2px;
	height: 35px !important;
	position: absolute;
	right: 0;
	top: -1px;
	width: 27px !important;

	&:before {
		border-color: #646262 transparent transparent;
		border-style: solid;
		border-width: 3px 3px 2px;
		content: "";
		display: inline-block;
		height: 0;
		position: absolute;
		right: 10px;
		top: 16px;
		width: 0;
	}
}